---
const projects = [
  
  {
    title: "Portfolio Design",
    category: "UI/UX Design",
    description: "A modern portfolio website design with smooth animations and intuitive navigation.",
    image: "/public/Fordaweb.png",
    tags: ["Figma", "Astro", "UI/UX"]
  },
  
];

const categories = ["All", ...new Set(projects.map(project => project.category))];
---

<section id="projects" class="projects">
  <div class="container">
    <h2 class="section-title animate-on-scroll">My Projects</h2>
    
    <div class="filter-buttons animate-on-scroll">
      {categories.map(category => (
        <button class="filter-button" data-filter={category === "All" ? "all" : category}>{category}</button>
      ))}
    </div>
    
    <div class="projects-grid">
      {projects.map((project, index) => (
        <div class="project-card animate-on-scroll" data-category={project.category} style={`animation-delay: ${index * 0.1}s`}>
          <div class="project-image">
            <img src={project.image} alt={project.title} />
            <div class="project-overlay">
              <a href="#" class="view-project">View Project</a>
            </div>
          </div>
          <div class="project-info">
            <span class="project-category">{project.category}</span>
            <h3 class="project-title">{project.title}</h3>
            <p class="project-description">{project.description}</p>
            <div class="project-tags">
              {project.tags.map(tag => (
                <span class="project-tag">{tag}</span>
              ))}
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<script>
  // Project filtering
  const filterButtons = document.querySelectorAll('.filter-button');
  const projectCards = document.querySelectorAll('.project-card');
  
  // Set "All" as active by default
  document.querySelector('.filter-button[data-filter="all"]')?.classList.add('active');
  
  filterButtons.forEach(button => {
    button.addEventListener('click', () => {
      // Update active button
      filterButtons.forEach(btn => btn.classList.remove('active'));
      button.classList.add('active');
      
      const filter = button.getAttribute('data-filter');
      
      projectCards.forEach(card => {
        if (filter === 'all') {
          (card as HTMLElement).style.display = 'block';
        } else {
          (card as HTMLElement).style.display = card.getAttribute('data-category') === filter ? 'block' : 'none';
        }
      });
    });
  });
</script>

<style>
  .projects {
    background-color: var(--color-bg);
  }
  
  .filter-buttons {
    display: flex;
    gap: var(--space-2);
    flex-wrap: wrap;
    margin-bottom: var(--space-5);
    justify-content: center;
  }
  
  .filter-button {
    background: none;
    border: 1px solid var(--color-border);
    padding: var(--space-2) var(--space-3);
    border-radius: 30px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 0.9rem;
    color: var(--color-text);
  }
  
  .filter-button:hover, .filter-button.active {
    background-color: var(--color-primary);
    color: white;
    border-color: var(--color-primary);
  }
  
  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: var(--space-4);
  }
  
  .project-card {
    background-color: var(--color-card);
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .project-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
  }
  
  .project-image {
    position: relative;
    height: 200px;
    overflow: hidden;
  }
  
  .project-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }
  
  .project-card:hover .project-image img {
    transform: scale(1.05);
  }
  
  .project-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .project-card:hover .project-overlay {
    opacity: 1;
  }
  
  .view-project {
    background-color: var(--color-secondary);
    color: white;
    padding: var(--space-2) var(--space-3);
    border-radius: 4px;
    font-weight: 500;
    transition: background-color 0.3s ease;
  }
  
  .view-project:hover {
    background-color: var(--color-primary);
  }
  
  .project-info {
    padding: var(--space-3);
  }
  
  .project-category {
    font-size: 0.8rem;
    color: var(--color-primary);
    margin-bottom: var(--space-1);
    display: block;
  }
  
  .project-title {
    font-size: 1.2rem;
    margin-bottom: var(--space-2);
  }
  
  .project-description {
    font-size: 0.9rem;
    margin-bottom: var(--space-3);
    opacity: 0.9;
  }
  
  .project-tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-1);
  }
  
  .project-tag {
    font-size: 0.7rem;
    background-color: var(--color-bg);
    color: var(--color-text);
    padding: 3px 8px;
    border-radius: 4px;
  }
  
  @media (max-width: 768px) {
    .projects-grid {
      grid-template-columns: 1fr;
    }
  }
</style>